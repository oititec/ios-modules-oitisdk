// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name OitiSecurity
import CommonCrypto
import CoreLocation
import Foundation
import MetricKit
import Network
import OitiNetwork
import OitiUtils
import Security
import Swift
import UIKit.UIDevice
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct CryptoManager {
  public static func encrypt(_ value: Foundation.NSData, withKey secretKey: Swift.String) -> Swift.String?
  public static func decrypt(_ value: Swift.String, withKey secretKey: Swift.String) -> Foundation.Data?
}
@_hasMissingDesignatedInitializers public class DLCoordinate {
  final public let latitude: Swift.Double
  final public let longitude: Swift.Double
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class DebugLogger : OitiSecurity.DebugLoggerProtocol {
  convenience public init(ticket: Swift.String, environment: OitiNetwork.Environment)
  final public func logData(forStep step: Swift.String, errorDetail: OitiNetwork.ErrorDetail, provider: Swift.String)
  @objc deinit
}
public protocol DebugLoggerProtocol {
  func logData(forStep step: Swift.String, errorDetail: OitiNetwork.ErrorDetail, provider: Swift.String)
}
public enum EventType : Swift.String, Swift.CaseIterable {
  case STATE_L3_hybridLoadingView
  case STATE_L3_instructionView
  case ACTION_L3_instructionContinueBtn
  case ACTION_L3_instructionBackBtn
  case STATE_L3FT_flow
  case SYSTEM_L3_callbackSuccess
  case SYSTEM_L3_callbackError
  case STATE_L3_cameraPermissionView
  case ACTION_L3_cameraPermissionBackBtn
  case ACTION_L3_cameraPermissionCheckBtn
  case ACTION_L3_cameraPermissionGoToSettingsBtn
  case ACTION_L3_cameraPermissionCloseBtn
  case STATE_L2_hybridLoadingView
  case STATE_L2_instructionView
  case ACTION_L2_instructionContinueBtn
  case ACTION_L2_instructionBackBtn
  case STATE_L2_livenessView
  case ACTION_L2_livenessStartBtn
  case ACTION_L2_livenessBackBtn
  case ACTION_L2_livenessCloseBtn
  case LOG_L2_stepChallenge
  case LOG_L2_stepProcessImage
  case STATE_L2_loadingView
  case STATE_L2_resultSuccessView
  case STATE_L2_resultErrorView
  case ACTION_L2_resultErrorBtn
  case SYSTEM_L2_callbackSuccess
  case SYSTEM_L2_callbackCancelled
  case SYSTEM_L2_callbackError
  case STATE_L2_cameraPermissionView
  case ACTION_L2_cameraPermissionBackBtn
  case ACTION_L2_cameraPermissionCheckBtn
  case ACTION_L2_cameraPermissionGoToSettingsBtn
  case ACTION_L2_cameraPermissionCloseBtn
  case SYSTEM_DC_hasTicket
  case STATE_DC_hybridLoadingView
  case STATE_DC_instructionView
  case ACTION_DC_instructionBackBtn
  case ACTION_DC_instructionContinueBtn
  case STATE_DC_captureView
  case STATE_DC_takePictureFrontDoc
  case ACTION_DC_takePictureFrontDocBtn
  case ACTION_DC_takePictureFrontDocBackBtn
  case ACTION_DC_takePictureFrontDocCloseBtn
  case STATE_DC_reviewPictureFrontDoc
  case ACTION_DC_reviewPictureFrontDocRefuseBtn
  case ACTION_DC_reviewPictureFrontDocConfirmBtn
  case ACTION_DC_reviewPictureFrontDocBackBtn
  case ACTION_DC_reviewPictureFrontDocCloseBtn
  case STATE_DC_takePictureBackDoc
  case ACTION_DC_takePictureBackDocBtn
  case ACTION_DC_takePictureBackDocBackBtn
  case ACTION_DC_takePictureBackDocCloseBtn
  case STATE_DC_reviewPictureBackDoc
  case ACTION_DC_reviewPictureBackDocRefuseBtn
  case ACTION_DC_reviewPictureBackDocConfirmBtn
  case ACTION_DC_reviewPictureBackDocBackBtn
  case ACTION_DC_reviewPictureBackDocCloseBtn
  case STATE_DC_loadingView
  case STATE_DC_resultSuccessView
  case STATE_DC_resultErrorView
  case STATE_DC_resultRetryView
  case ACTION_DC_resultRetryBtn
  case SYSTEM_DC_callbackSuccess
  case SYSTEM_DC_callbackCancelled
  case SYSTEM_DC_callbackError
  case STATE_DC_cameraPermissionView
  case ACTION_DC_cameraPermissionBackBtn
  case ACTION_DC_cameraPermissionCheckBtn
  case ACTION_DC_cameraPermissionGoToSettingsBtn
  case ACTION_DC_cameraPermissionCloseBtn
  public init?(rawValue: Swift.String)
  public typealias AllCases = [OitiSecurity.EventType]
  public typealias RawValue = Swift.String
  public static var allCases: [OitiSecurity.EventType] {
    get
  }
  public var rawValue: Swift.String {
    get
  }
}
@_hasMissingDesignatedInitializers final public class ExceptionHandler {
  public static let shared: OitiSecurity.ExceptionHandler
  final public func configure(withTicket ticket: Swift.String? = nil, appKey: Swift.String, environment: OitiNetwork.Environment, debugMode debugModeEnabled: Swift.Bool = false)
  final public func updateProvider(_ provider: Swift.String)
  @objc deinit
}
public struct ExceptionPayload : Swift.Error {
}
@_hasMissingDesignatedInitializers final public class FaceCaptchaDebugLogger : OitiSecurity.DebugLoggerProtocol {
  convenience public init(appKey: Swift.String, environment: OitiNetwork.Environment)
  final public func logData(forStep step: Swift.String, errorDetail: OitiNetwork.ErrorDetail, provider: Swift.String)
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class LegacyExceptionHandler {
  public static var exceptionCallback: ((OitiSecurity.ExceptionPayload) -> Swift.Void)?
  public static func start()
  @objc deinit
}
public enum PersistenceOption : Swift.String {
  case index
  case collectionID
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public protocol RequestHelper {
  func generateUserAgent(with bundleIdentifier: Swift.String) -> Swift.String
}
@_hasMissingDesignatedInitializers final public class DefaultRequestHelper : OitiSecurity.RequestHelper {
  convenience public init()
  final public func generateUserAgent(with bundleIdentifier: Swift.String) -> Swift.String
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class SecurityManager {
  @objc deinit
  public static func session(for sessionIdentifier: Swift.String, environment: OitiNetwork.Environment) -> OitiSecurity.SecurityManager?
  final public func requestLocation()
  final public func trackEvent(_ event: OitiSecurity.EventType)
  final public func uploadDeviceInfoAndLocation(appKey: Swift.String, ticket: Swift.String? = nil, journeyId: Swift.String? = nil, autoClose: Swift.Bool = true, provider: Swift.String, options: [OitiSecurity.PersistenceOption : Swift.String] = [:], completion: ((Swift.String?) -> Swift.Void)? = nil)
  final public func uploadDeviceBehavior(with appKey: Swift.String, ticket: Swift.String? = nil, journeyId: Swift.String? = nil, autoClose: Swift.Bool = true, provider: Swift.String, options: [OitiSecurity.PersistenceOption : Swift.String] = [:], completion: ((Swift.String?) -> Swift.Void)? = nil)
}
extension OitiSecurity.SecurityManager : Swift.Hashable {
  public static func == (lhs: OitiSecurity.SecurityManager, rhs: OitiSecurity.SecurityManager) -> Swift.Bool
  final public func hash(into hasher: inout Swift.Hasher)
  final public var hashValue: Swift.Int {
    get
  }
}
public struct SecurityPayload {
}
public struct SecurityEvent {
}
extension OitiSecurity.EventType : Swift.Equatable {}
extension OitiSecurity.EventType : Swift.Hashable {}
extension OitiSecurity.EventType : Swift.RawRepresentable {}
extension OitiSecurity.PersistenceOption : Swift.Equatable {}
extension OitiSecurity.PersistenceOption : Swift.Hashable {}
extension OitiSecurity.PersistenceOption : Swift.RawRepresentable {}
