// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name OitiUtils
import AVFoundation
import CommonCrypto
import Foundation
import Swift
import SystemConfiguration
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
extension Foundation.Data {
  public var bytes: [Swift.UInt8] {
    get
  }
}
extension Swift.String {
  public var bytes: Swift.Array<Swift.UInt8> {
    get
  }
}
public enum CryptoHandler {
  public static func encrypt(value: Swift.String, key: Swift.String) throws -> Foundation.Data
  public static func decrypt(value: Swift.String, key: Swift.String) throws -> Foundation.Data
}
public enum HardwareStatusManager {
  public static func checkCameraPermission(completion: @escaping (_ granted: Swift.Bool) -> Swift.Void)
  public static func isConnectedToNetwork() -> Swift.Bool
}
extension Swift.String {
  public func addingPercentEncodingForURLQueryValue() -> Swift.String?
  public func base64Encoded() -> Swift.String?
  public func base64Decoded() -> Swift.String?
  public func encodeURIComponent() -> Swift.String?
}
extension Swift.Dictionary {
  public func stringFromHttpParameters() -> Swift.String
}
